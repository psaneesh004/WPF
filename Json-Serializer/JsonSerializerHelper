public class SerializationHelper
    {
        /// <summary>
        /// Method for deserializng the json string
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <param name="jsonString"></param>
        /// <returns></returns>
        public static T DeserializeJson<T>(string jsonString)
        {
            try
            {
                var result = JsonConvert.DeserializeObject<T>(jsonString);
                return result;
            }
            catch
            {
                return default(T);
            }
        }


        /// <summary>
        /// Method for serializing the object to json string 
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <param name="jsonObject"></param>
        /// <returns></returns>
        public static string SerializeJson<T>(T jsonObject)
        {
            try
            {
                var result = JsonConvert.SerializeObject(jsonObject);
                return result;
            }
            catch
            {
                return string.Empty;
            }
        }
    }
